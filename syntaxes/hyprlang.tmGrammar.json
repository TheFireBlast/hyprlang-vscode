{
    "name": "hyprlang",
    "scopeName": "source.hyprlang",
    "patterns": [
        {
            "include": "#main"
        }
    ],
    "repository": {
        "main": {
            "patterns": [
                {
                    "name": "variable.other.hyprlang",
                    "match": "(\\$[A-Za-z_][A-Za-z_0-9\\.\\-\\+]*)"
                },
                {
                    "match": "(^\\s*[A-Za-z_][A-Za-z_0-9\\.\\-\\+]*)(\\s*=)",
                    "captures": {
                        "1": {
                            "name": "keyword.hyprlang"
                        },
                        "2": {
                            "name": "punctuation.hyprlang"
                        }
                    }
                },
                {
                    "match": "(^\\s*[A-Za-z_][A-Za-z_0-9\\.\\-\\+]*)(\\s*\\{)",
                    "captures": {
                        "1": {
                            "name": "entity.name.section.hyprlang"
                        },
                        "2": {
                            "name": "punctuation.hyprlang"
                        }
                    }
                },
                {
                    "match": "(rgba)(\\(\\s*)([A-Fa-f0-9]+)",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.hyprlang"
                        },
                        "2": {
                            "name": "punctuation.hyprlang"
                        },
                        "3": {
                            "name": "constant.numeric.hyprlang"
                        }
                    }
                },
                {
                    "match": "(rgba)(\\()",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.hyprlang"
                        },
                        "2": {
                            "name": "punctuation.hyprlang"
                        }
                    }
                },
                {
                    "begin": "((?:class|title|initialClass|initialTitle))(:)",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.hyprlang"
                        },
                        "2": {
                            "name": "punctuation.hyprlang"
                        }
                    },
                    "end": "(,|$)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.hyprlang"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.hyprlang",
                            "match": "(##)"
                        },
                        {
                            "name": "comment.line.number-sign.hyprlang",
                            "match": "(#.*)"
                        },
                        {
                            "name": "string.regexp.hyprlang",
                            "match": "([^,#]*)"
                        }
                    ]
                },
                {
                    "name": "constant.language.boolean.hyprlang",
                    "match": "\\b(true|false|yes|no|on|off)\\b"
                },
                {
                    "name": "none.hyprlang",
                    "match": "([A-Za-z_][A-Za-z_0-9\\.\\-\\+]*)"
                },
                {
                    "name": "constant.numeric.hyprlang",
                    "match": "([+-]?\\b(?:0x[A-Fa-f0-9]*|\\d+(?:\\.\\d*)?|\\.\\d+)(?:%|deg)?)"
                },
                {
                    "begin": "(\\\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.hyprlang"
                        }
                    },
                    "end": "(\\\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.hyprlang"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.hyprlang",
                            "match": "((?:\\\\u[0-9a-f]{4})|(?:\\\\[\"\\\\/bfnrt]))"
                        },
                        {
                            "name": "string.quoted.double.hyprlang",
                            "match": "([^\\\"\\\\]+)"
                        }
                    ]
                },
                {
                    "name": "comment.line.number-sign.hyprlang",
                    "match": "(#.*)"
                },
                {
                    "name": "punctuation.hyprlang",
                    "match": "([;{},.()\\[\\]=+-@!?:;|\\\\/*&%Â´`~^<>])"
                }
            ]
        }
    },
    "fileTypes": [
        "hyprlang"
    ]
}